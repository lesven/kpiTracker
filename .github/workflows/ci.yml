# GitHub Actions CI/CD Pipeline
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mariadb:10.11
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: symfony
          MYSQL_PASSWORD: symfony
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=15s --health-timeout=10s --health-retries=5

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json, pdo, zip
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Wait for MySQL
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h 127.0.0.1 -u symfony -psymfony --silent; then
            echo "MySQL is ready"
            break
          fi
          echo "Waiting for MySQL... ($i/30)"
          sleep 2
        done

    - name: Grant Database Privileges
      run: |
        mysql -h 127.0.0.1 -u root -proot -e "GRANT ALL PRIVILEGES ON *.* TO 'symfony'@'%'; FLUSH PRIVILEGES;"

    - name: Create Database
      env:
        DATABASE_URL: mysql://symfony:symfony@127.0.0.1:3306/kpi_tracker_test
      run: |
        php bin/console doctrine:database:create --env=test
        php bin/console doctrine:migrations:migrate --no-interaction --env=test

    - name: Validate Symfony System
      env:
        DATABASE_URL: mysql://symfony:symfony@127.0.0.1:3306/kpi_tracker_test
      run: |
        echo "::group::Doctrine Schema Validation"
        php bin/console doctrine:schema:validate --skip-sync --env=test
        echo "::endgroup::"
        
        echo "::group::Container Validation"
        php bin/console lint:container --env=test
        echo "::endgroup::"
        
        echo "::group::Twig Template Validation"
        php bin/console lint:twig templates/ --env=test
        echo "::endgroup::"
        
        echo "::group::YAML Configuration Validation"
        php bin/console lint:yaml config/ --env=test
        echo "::endgroup::"

    - name: Run PHPUnit tests
      env:
        DATABASE_URL: mysql://symfony:symfony@127.0.0.1:3306/kpi_tracker_test
      run: ./vendor/bin/phpunit --coverage-clover=coverage.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

    - name: Run PHP CS Fixer
      run: ./vendor/bin/php-cs-fixer fix --dry-run --diff --allow-risky=yes

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Security Audit
      run: |
        echo "::group::Composer Security Audit"
        composer audit --no-dev || echo "::warning::Security vulnerabilities found in dependencies"
        echo "::endgroup::"

    - name: Symfony Security Check
      run: |
        echo "::group::Symfony Security Check"
        php bin/console security:check || echo "::warning::Symfony security issues found"
        echo "::endgroup::"

